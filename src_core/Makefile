## Top Makefile for VSIP Minimal Core Profile
## Created by RJudd February 15, 1999
## SPAWARSYSCEN D881
## This work is the work of a government employee as part of his official duties
##
CC=gcc
INCLUDE=-I../include -I../../include/privateC
DEFINEP=-DVSIP_PERFORMANCE_MODE
DEFINED=-DVSIP_DEVELOPMENT_MODE
OPTIONS=-O2 -Wall -ansi -pedantic -fopenmp
AR=ar
AR_OPTIONS=rcvs
ARLIBP=libvsip_c.a
ARLIBD=libDvsip_c.a
COMPILEP=$(CC) $(DEFINEP) $(OPTIONS)
COMPILED=$(CC) $(DEFINED) $(OPTIONS)
performance:
	(cd scalar/vsip_cscalar_f; make COMPILE='$(COMPILEP)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBP)' obj)
	(cd scalar/vsip_CSCALARm_f; make COMPILE='$(COMPILEP)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBP)' obj)
	(cd scalar/vsip_scalar_mi; make COMPILE='$(COMPILEP)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBP)' obj)
	(cd support/vector/vsip_vview_bl; make COMPILE='$(COMPILEP)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBP)' obj)
	(cd support/init_fin; make COMPILE='$(COMPILEP)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBP)' obj)
	(cd support/block/vsip_block_f; make COMPILE='$(COMPILEP)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBP)' obj)
	(cd support/block/vsip_block_i; make COMPILE='$(COMPILEP)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBP)' obj)
	(cd support/block/vsip_block_mi; make COMPILE='$(COMPILEP)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBP)' obj)
	(cd support/block/vsip_block_vi; make COMPILE='$(COMPILEP)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBP)' obj)
	(cd support/block/vsip_block_bl; make COMPILE='$(COMPILEP)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBP)' obj)
	(cd support/block/vsip_cblock_f; make COMPILE='$(COMPILEP)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBP)' obj)
	(cd support/copy; make COMPILE='$(COMPILEP)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBP)' obj)
	(cd support/matrix/vsip_cmview_f; make COMPILE='$(COMPILEP)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBP)' obj)
	(cd support/matrix/vsip_mview_f; make COMPILE='$(COMPILEP)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBP)' obj)
	(cd support/vector/vsip_cvview_f; make COMPILE='$(COMPILEP)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBP)' obj)
	(cd support/vector/vsip_vview_bl; make COMPILE='$(COMPILEP)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBP)' obj)
	(cd support/vector/vsip_vview_f; make COMPILE='$(COMPILEP)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBP)' obj)
	(cd support/vector/vsip_vview_i; make COMPILE='$(COMPILEP)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBP)' obj)
	(cd support/vector/vsip_vview_mi; make COMPILE='$(COMPILEP)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBP)' obj)
	(cd support/vector/vsip_vview_vi; make COMPILE='$(COMPILEP)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBP)' obj)
	(cd vector/vsip_cvview_f; make COMPILE='$(COMPILEP)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBP)' obj)
	(cd vector/vsip_random; make COMPILE='$(COMPILEP)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBP)' obj)
	(cd vector/vsip_vview_f; make COMPILE='$(COMPILEP)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBP)' obj)
	(cd vector/vsip_vview_i; make COMPILE='$(COMPILEP)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBP)' obj)
	(cd vector/vsip_vview_bl; make COMPILE='$(COMPILEP)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBP)' obj)
	(cd signal/vsip_fft_f; make COMPILE='$(COMPILEP)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBP)' obj)
	(cd signal/vsip_fftm_f; make COMPILE='$(COMPILEP)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBP)' obj)
	(cd signal/vsip_fir_f; make COMPILE='$(COMPILEP)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBP)' obj)
	(cd signal/vsip_corr1d_f; make COMPILE='$(COMPILEP)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBP)' obj)
	(cd signal/vsip_conv1d_f; make COMPILE='$(COMPILEP)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBP)' obj)
	(cd signal/vsip_vview_f; make COMPILE='$(COMPILEP)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBP)' obj)
	(cd linalg/vsip_mview_f; make COMPILE='$(COMPILEP)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBP)' obj)
	(cd linalg/vsip_cmview_f; make COMPILE='$(COMPILEP)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBP)' obj)
	(cd linalg/vsip_lud_f; make COMPILE='$(COMPILEP)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBP)' obj)
	(cd linalg/vsip_chold_f; make COMPILE='$(COMPILEP)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBP)' obj)
	(cd linalg/vsip_qrd_f; make COMPILE='$(COMPILEP)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBP)' obj)
	(cd linalg/vsip_spclslvrs_f; make COMPILE='$(COMPILEP)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBP)' obj)
	(cd scalar/vsip_cscalar_f; make COMPILE='$(COMPILEP)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBP)' arch)
	(cd scalar/vsip_CSCALARm_f; make COMPILE='$(COMPILEP)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBP)' arch)
	(cd scalar/vsip_scalar_mi; make COMPILE='$(COMPILEP)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBP)' arch)
	(cd support/vector/vsip_vview_bl; make COMPILE='$(COMPILEP)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBP)' arch)
	(cd support/init_fin; make COMPILE='$(COMPILEP)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBP)' arch)
	(cd support/block/vsip_block_f; make COMPILE='$(COMPILEP)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBP)' arch)
	(cd support/block/vsip_block_i; make COMPILE='$(COMPILEP)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBP)' arch)
	(cd support/block/vsip_block_mi; make COMPILE='$(COMPILEP)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBP)' arch)
	(cd support/block/vsip_block_vi; make COMPILE='$(COMPILEP)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBP)' arch)
	(cd support/block/vsip_block_bl; make COMPILE='$(COMPILEP)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBP)' arch)
	(cd support/block/vsip_cblock_f; make COMPILE='$(COMPILEP)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBP)' arch)
	(cd support/copy; make COMPILE='$(COMPILEP)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBP)' arch)
	(cd support/matrix/vsip_cmview_f; make COMPILE='$(COMPILEP)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBP)' arch)
	(cd support/matrix/vsip_mview_f; make COMPILE='$(COMPILEP)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBP)' arch)
	(cd support/vector/vsip_cvview_f; make COMPILE='$(COMPILEP)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBP)' arch)
	(cd support/vector/vsip_vview_bl; make COMPILE='$(COMPILEP)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBP)' arch)
	(cd support/vector/vsip_vview_f; make COMPILE='$(COMPILEP)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBP)' arch)
	(cd support/vector/vsip_vview_i; make COMPILE='$(COMPILEP)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBP)' arch)
	(cd support/vector/vsip_vview_mi; make COMPILE='$(COMPILEP)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBP)' arch)
	(cd support/vector/vsip_vview_vi; make COMPILE='$(COMPILEP)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBP)' arch)
	(cd vector/vsip_cvview_f; make COMPILE='$(COMPILEP)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBP)' arch)
	(cd vector/vsip_random; make COMPILE='$(COMPILEP)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBP)' arch)
	(cd vector/vsip_vview_f; make COMPILE='$(COMPILEP)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBP)' arch)
	(cd vector/vsip_vview_i; make COMPILE='$(COMPILEP)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBP)' arch)
	(cd vector/vsip_vview_bl; make COMPILE='$(COMPILEP)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBP)' arch)
	(cd signal/vsip_fft_f; make COMPILE='$(COMPILEP)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBP)' arch)
	(cd signal/vsip_fftm_f; make COMPILE='$(COMPILEP)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBP)' arch)
	(cd signal/vsip_fir_f; make COMPILE='$(COMPILEP)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBP)' arch)
	(cd signal/vsip_corr1d_f; make COMPILE='$(COMPILEP)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBP)' arch)
	(cd signal/vsip_conv1d_f; make COMPILE='$(COMPILEP)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBP)' arch)
	(cd signal/vsip_vview_f; make COMPILE='$(COMPILEP)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBP)' arch)
	(cd linalg/vsip_mview_f; make COMPILE='$(COMPILEP)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBP)' arch)
	(cd linalg/vsip_cmview_f; make COMPILE='$(COMPILEP)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBP)' arch)
	(cd linalg/vsip_lud_f; make COMPILE='$(COMPILEP)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBP)' arch)
	(cd linalg/vsip_chold_f; make COMPILE='$(COMPILEP)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBP)' arch)
	(cd linalg/vsip_qrd_f; make COMPILE='$(COMPILEP)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBP)' arch)
	(cd linalg/vsip_spclslvrs_f; make COMPILE='$(COMPILEP)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBP)' arch)

development:
	(cd error; make COMPILE='$(COMPILED)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBD)' obj)
	(cd support/block/error; make COMPILE='$(COMPILED)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBD)' obj)
	(cd support/matrix/vsip_cmview_f/error; make COMPILE='$(COMPILED)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBD)' obj)
	(cd support/matrix/vsip_mview_f/error;  make COMPILE='$(COMPILED)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBD)' obj)
	(cd support/vector/vsip_cvview_f/error; make COMPILE='$(COMPILED)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBD)' obj)
	(cd support/vector/vsip_vview_bl/error; make COMPILE='$(COMPILED)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBD)' obj)
	(cd support/vector/vsip_vview_f/error;  make COMPILE='$(COMPILED)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBD)' obj)
	(cd support/vector/vsip_vview_i/error;  make COMPILE='$(COMPILED)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBD)' obj)
	(cd support/vector/vsip_vview_mi/error; make COMPILE='$(COMPILED)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBD)' obj)
	(cd support/vector/vsip_vview_vi/error; make COMPILE='$(COMPILED)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBD)' obj)
	(cd scalar/vsip_cscalar_f; make COMPILE='$(COMPILED)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBD)' obj)
	(cd scalar/vsip_CSCALARm_f; make COMPILE='$(COMPILED)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBD)' obj)
	(cd scalar/vsip_scalar_mi; make COMPILE='$(COMPILED)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBD)' obj)
	(cd support/vector/vsip_vview_bl; make COMPILE='$(COMPILED)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBD)' obj)
	(cd support/init_fin; make COMPILE='$(COMPILED)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBD)' obj)
	(cd support/block/vsip_block_f; make COMPILE='$(COMPILED)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBD)' obj)
	(cd support/block/vsip_block_i; make COMPILE='$(COMPILED)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBD)' obj)
	(cd support/block/vsip_block_mi; make COMPILE='$(COMPILED)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBD)' obj)
	(cd support/block/vsip_block_vi; make COMPILE='$(COMPILED)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBD)' obj)
	(cd support/block/vsip_block_bl; make COMPILE='$(COMPILED)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBD)' obj)
	(cd support/block/vsip_cblock_f; make COMPILE='$(COMPILED)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBD)' obj)
	(cd support/copy; make COMPILE='$(COMPILED)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBD)' obj)
	(cd support/matrix/vsip_cmview_f; make COMPILE='$(COMPILED)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBD)' obj)
	(cd support/matrix/vsip_mview_f; make COMPILE='$(COMPILED)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBD)' obj)
	(cd support/vector/vsip_cvview_f; make COMPILE='$(COMPILED)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBD)' obj)
	(cd support/vector/vsip_vview_bl; make COMPILE='$(COMPILED)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBD)' obj)
	(cd support/vector/vsip_vview_f; make COMPILE='$(COMPILED)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBD)' obj)
	(cd support/vector/vsip_vview_i; make COMPILE='$(COMPILED)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBD)' obj)
	(cd support/vector/vsip_vview_mi; make COMPILE='$(COMPILED)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBD)' obj)
	(cd support/vector/vsip_vview_vi; make COMPILE='$(COMPILED)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBD)' obj)
	(cd vector/vsip_cvview_f; make COMPILE='$(COMPILED)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBD)' obj)
	(cd vector/vsip_random; make COMPILE='$(COMPILED)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBD)' obj)
	(cd vector/vsip_vview_f; make COMPILE='$(COMPILED)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBD)' obj)
	(cd vector/vsip_vview_i; make COMPILE='$(COMPILED)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBD)' obj)
	(cd vector/vsip_vview_bl; make COMPILE='$(COMPILED)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBD)' obj)
	(cd signal/vsip_fft_f; make COMPILE='$(COMPILED)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBD)' obj)
	(cd signal/vsip_fftm_f; make COMPILE='$(COMPILED)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBD)' obj)
	(cd signal/vsip_fir_f; make COMPILE='$(COMPILED)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBD)' obj)
	(cd signal/vsip_corr1d_f; make COMPILE='$(COMPILED)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBD)' obj)
	(cd signal/vsip_conv1d_f; make COMPILE='$(COMPILED)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBD)' obj)
	(cd signal/vsip_vview_f; make COMPILE='$(COMPILED)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBD)' obj)
	(cd linalg/vsip_mview_f; make COMPILE='$(COMPILED)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBD)' obj)
	(cd linalg/vsip_cmview_f; make COMPILE='$(COMPILED)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBD)' obj)
	(cd linalg/vsip_lud_f; make COMPILE='$(COMPILED)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBD)' obj)
	(cd linalg/vsip_chold_f; make COMPILE='$(COMPILED)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBD)' obj)
	(cd linalg/vsip_qrd_f; make COMPILE='$(COMPILED)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBD)' obj)
	(cd linalg/vsip_spclslvrs_f; make COMPILE='$(COMPILED)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBD)' obj)
	(cd error; make COMPILE='$(COMPILED)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBD)' arch)
	(cd support/block/error; make COMPILE='$(COMPILED)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBD)' arch)
	(cd support/matrix/vsip_cmview_f/error; make COMPILE='$(COMPILED)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBD)' arch)
	(cd support/matrix/vsip_mview_f/error;  make COMPILE='$(COMPILED)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBD)' arch)
	(cd support/vector/vsip_cvview_f/error; make COMPILE='$(COMPILED)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBD)' arch)
	(cd support/vector/vsip_vview_bl/error; make COMPILE='$(COMPILED)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBD)' arch)
	(cd support/vector/vsip_vview_f/error;  make COMPILE='$(COMPILED)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBD)' arch)
	(cd support/vector/vsip_vview_i/error;  make COMPILE='$(COMPILED)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBD)' arch)
	(cd support/vector/vsip_vview_mi/error; make COMPILE='$(COMPILED)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBD)' arch)
	(cd support/vector/vsip_vview_vi/error; make COMPILE='$(COMPILED)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBD)' arch)
	(cd scalar/vsip_cscalar_f; make COMPILE='$(COMPILED)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBD)' arch)
	(cd scalar/vsip_CSCALARm_f; make COMPILE='$(COMPILED)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBD)' arch)
	(cd scalar/vsip_scalar_mi; make COMPILE='$(COMPILED)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBD)' arch)
	(cd support/vector/vsip_vview_bl; make COMPILE='$(COMPILED)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBD)' arch)
	(cd support/init_fin; make COMPILE='$(COMPILED)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBD)' arch)
	(cd support/block/vsip_block_f; make COMPILE='$(COMPILED)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBD)' arch)
	(cd support/block/vsip_block_i; make COMPILE='$(COMPILED)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBD)' arch)
	(cd support/block/vsip_block_mi; make COMPILE='$(COMPILED)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBD)' arch)
	(cd support/block/vsip_block_vi; make COMPILE='$(COMPILED)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBD)' arch)
	(cd support/block/vsip_block_bl; make COMPILE='$(COMPILED)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBD)' arch)
	(cd support/block/vsip_cblock_f; make COMPILE='$(COMPILED)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBD)' arch)
	(cd support/copy; make COMPILE='$(COMPILED)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBD)' arch)
	(cd support/matrix/vsip_cmview_f; make COMPILE='$(COMPILED)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBD)' arch)
	(cd support/matrix/vsip_mview_f; make COMPILE='$(COMPILED)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBD)' arch)
	(cd support/vector/vsip_cvview_f; make COMPILE='$(COMPILED)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBD)' arch)
	(cd support/vector/vsip_vview_bl; make COMPILE='$(COMPILED)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBD)' arch)
	(cd support/vector/vsip_vview_f; make COMPILE='$(COMPILED)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBD)' arch)
	(cd support/vector/vsip_vview_i; make COMPILE='$(COMPILED)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBD)' arch)
	(cd support/vector/vsip_vview_mi; make COMPILE='$(COMPILED)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBD)' arch)
	(cd support/vector/vsip_vview_vi; make COMPILE='$(COMPILED)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBD)' arch)
	(cd vector/vsip_cvview_f; make COMPILE='$(COMPILED)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBD)' arch)
	(cd vector/vsip_random; make COMPILE='$(COMPILED)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBD)' arch)
	(cd vector/vsip_vview_f; make COMPILE='$(COMPILED)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBD)' arch)
	(cd vector/vsip_vview_i; make COMPILE='$(COMPILED)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBD)' arch)
	(cd vector/vsip_vview_bl; make COMPILE='$(COMPILED)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBD)' arch)
	(cd signal/vsip_fft_f; make COMPILE='$(COMPILED)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBD)' arch)
	(cd signal/vsip_fftm_f; make COMPILE='$(COMPILED)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBD)' arch)
	(cd signal/vsip_fir_f; make COMPILE='$(COMPILED)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBD)' arch)
	(cd signal/vsip_corr1d_f; make COMPILE='$(COMPILED)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBD)' arch)
	(cd signal/vsip_conv1d_f; make COMPILE='$(COMPILED)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBD)' arch)
	(cd signal/vsip_vview_f; make COMPILE='$(COMPILED)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBD)' arch)
	(cd linalg/vsip_mview_f; make COMPILE='$(COMPILED)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBD)' arch)
	(cd linalg/vsip_cmview_f; make COMPILE='$(COMPILED)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBD)' arch)
	(cd linalg/vsip_lud_f; make COMPILE='$(COMPILED)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBD)' arch)
	(cd linalg/vsip_chold_f; make COMPILE='$(COMPILED)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBD)' arch)
	(cd linalg/vsip_qrd_f; make COMPILE='$(COMPILED)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBD)' arch)
	(cd linalg/vsip_spclslvrs_f; make COMPILE='$(COMPILED)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBD)' arch)

para:
	(cd vector/vsip_vview_f; make COMPILE='$(COMPILEP)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBP)' obj_para)
	(cd vector/vsip_vview_f; make COMPILE='$(COMPILEP)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBP)' arch_para)
	(cd linalg/vsip_mview_f; make COMPILE='$(COMPILEP)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBP)' obj_para)
	(cd linalg/vsip_mview_f; make COMPILE='$(COMPILEP)' AR='$(AR)' AR_OPTIONS='$(AR_OPTIONS)' ARLIB='$(ARLIBP)' arch_para)

paraclean:
	(cd vector/vsip_vview_f; make paraclean)
	(cd linalg/vsip_mview_f; make paraclean)

clean:
	(cd scalar/vsip_cscalar_f; make clean) 
	(cd scalar/vsip_CSCALARm_f; make clean) 
	(cd scalar/vsip_scalar_mi; make clean)
	(cd support/vector/vsip_vview_bl; make clean) 
	(cd support/init_fin; make clean) 
	(cd support/block/vsip_block_f; make clean) 
	(cd support/block/vsip_block_i; make clean) 
	(cd support/block/vsip_block_mi; make clean) 
	(cd support/block/vsip_block_vi; make clean) 
	(cd support/block/vsip_block_bl; make clean) 
	(cd support/block/vsip_cblock_f; make clean) 
	(cd support/copy; make clean) 
	(cd support/matrix/vsip_cmview_f; make clean) 
	(cd support/matrix/vsip_mview_f; make clean) 
	(cd support/vector/vsip_cvview_f; make clean) 
	(cd support/vector/vsip_vview_bl; make clean) 
	(cd support/vector/vsip_vview_f; make clean) 
	(cd support/vector/vsip_vview_i; make clean) 
	(cd support/vector/vsip_vview_mi; make clean) 
	(cd support/vector/vsip_vview_vi; make clean) 
	(cd vector/vsip_cvview_f; make clean) 
	(cd vector/vsip_random; make clean) 
	(cd vector/vsip_vview_f; make clean) 
	(cd vector/vsip_vview_i; make clean) 
	(cd vector/vsip_vview_bl; make clean)
	(cd signal/vsip_fft_f; make clean) 
	(cd signal/vsip_fftm_f; make clean) 
	(cd signal/vsip_fir_f; make clean) 
	(cd signal/vsip_corr1d_f; make clean) 
	(cd signal/vsip_conv1d_f; make clean) 
	(cd signal/vsip_vview_f; make clean) 
	(cd linalg/vsip_mview_f; make clean)
	(cd linalg/vsip_cmview_f; make clean)
	(cd linalg/vsip_lud_f; make clean)
	(cd linalg/vsip_chold_f; make clean)
	(cd linalg/vsip_qrd_f; make clean)
	(cd linalg/vsip_spclslvrs_f; make clean)
	(cd error; make clean) 
	(cd support/block/error; make clean) 
	(cd support/matrix/vsip_cmview_f/error; make clean) 
	(cd support/matrix/vsip_mview_f/error; make clean) 
	(cd support/vector/vsip_cvview_f/error; make clean) 
	(cd support/vector/vsip_vview_bl/error; make clean) 
	(cd support/matrix/vsip_cmview_f/error; make clean)
	(cd support/matrix/vsip_mview_f/error; make clean)
	(cd support/vector/vsip_cvview_f/error; make clean)
	(cd support/vector/vsip_vview_bl/error; make clean)
	(cd support/vector/vsip_vview_f/error; make clean)
	(cd support/vector/vsip_vview_i/error; make clean)
	(cd support/vector/vsip_vview_mi/error; make clean)
	(cd support/vector/vsip_vview_vi/error; make clean)
